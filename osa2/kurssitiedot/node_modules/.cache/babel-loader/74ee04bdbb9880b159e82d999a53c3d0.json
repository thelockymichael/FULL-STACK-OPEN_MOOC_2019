{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mental Mickey\\\\Documents\\\\GitHub\\\\FULL-STACK-OPEN_MOOC_2019\\\\osa2\\\\part2-notes-part2-1\\\\src\\\\components\\\\Course.js\";\nimport React from \"react\";\nimport { validate } from \"@babel/types\";\n\nconst Course = props => {\n  const course = props.course;\n  const parts = course.parts;\n  const array1 = [1, 2, 3, 4];\n  const reducer = array1.reduce((acc, cur) => {\n    return acc + cur;\n  });\n  console.log(reducer);\n  console.log(parts);\n  const total = parts.reduce((s, p) => {\n    return {\n      x: s.exercises + p.exercises\n    };\n  });\n  console.log(total);\n  var initialValue = 0;\n  var sum = [{\n    x: 1\n  }, {\n    x: 2\n  }, {\n    x: 3\n  }].reduce(function (accumulator, currentValue) {\n    return accumulator + currentValue.x;\n  }, initialValue);\n  console.log(sum); // logs 6\n\n  const rows = () => course.parts.map(el => React.createElement(\"p\", {\n    key: el.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, el.name, \" \", el.exercises));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, course.name), rows());\n}; //   const rows = () => course.map(el => <p key={el.parts.id}>{el.parts.name}</p>);\n//   const result = { course };\n//   console.log(result);\n//   return { result };\n//   return (\n//     <>\n//       {course.map(el => (\n//         <p key={el.parts.id}>{el.parts.name}</p>\n//       ))}\n//     </>\n//   );\n\n\nexport default Course;","map":{"version":3,"sources":["C:\\Users\\Mental Mickey\\Documents\\GitHub\\FULL-STACK-OPEN_MOOC_2019\\osa2\\part2-notes-part2-1\\src\\components\\Course.js"],"names":["React","validate","Course","props","course","parts","array1","reducer","reduce","acc","cur","console","log","total","s","p","x","exercises","initialValue","sum","accumulator","currentValue","rows","map","el","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,QACdC,MADc,GACHD,KADG,CACdC,MADc;AAAA,QAGdC,KAHc,GAGJD,MAHI,CAGdC,KAHc;AAKtB,QAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf;AACA,QAAMC,OAAO,GAAGD,MAAM,CAACE,MAAP,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1C,WAAOD,GAAG,GAAGC,GAAb;AACD,GAFe,CAAhB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,QAAMQ,KAAK,GAAGR,KAAK,CAACG,MAAN,CAAa,CAACM,CAAD,EAAIC,CAAJ,KAAU;AACnC,WAAO;AAAEC,MAAAA,CAAC,EAAEF,CAAC,CAACG,SAAF,GAAcF,CAAC,CAACE;AAArB,KAAP;AACD,GAFa,CAAd;AAIAN,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEA,MAAIK,YAAY,GAAG,CAAnB;AACA,MAAIC,GAAG,GAAG,CAAC;AAAEH,IAAAA,CAAC,EAAE;AAAL,GAAD,EAAW;AAAEA,IAAAA,CAAC,EAAE;AAAL,GAAX,EAAqB;AAAEA,IAAAA,CAAC,EAAE;AAAL,GAArB,EAA+BR,MAA/B,CAAsC,UAC9CY,WAD8C,EAE9CC,YAF8C,EAG9C;AACA,WAAOD,WAAW,GAAGC,YAAY,CAACL,CAAlC;AACD,GALS,EAMVE,YANU,CAAV;AAQAP,EAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ,EA3BsB,CA2BJ;;AAClB,QAAMG,IAAI,GAAG,MACXlB,MAAM,CAACC,KAAP,CAAakB,GAAb,CAAiBC,EAAE,IACjB;AAAG,IAAA,GAAG,EAAEA,EAAE,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,EAAE,CAACE,IADN,OACaF,EAAE,CAACP,SADhB,CADF,CADF;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,MAAM,CAACsB,IAAZ,CADF,EAEGJ,IAAI,EAFP,CADF;AAMD,CAzCD,C,CA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAepB,MAAf","sourcesContent":["import React from \"react\";\r\nimport { validate } from \"@babel/types\";\r\n\r\nconst Course = props => {\r\n  const { course } = props;\r\n\r\n  const { parts } = course;\r\n\r\n  const array1 = [1, 2, 3, 4];\r\n  const reducer = array1.reduce((acc, cur) => {\r\n    return acc + cur;\r\n  });\r\n  console.log(reducer);\r\n\r\n  console.log(parts);\r\n  const total = parts.reduce((s, p) => {\r\n    return { x: s.exercises + p.exercises };\r\n  });\r\n\r\n  console.log(total);\r\n\r\n  var initialValue = 0;\r\n  var sum = [{ x: 1 }, { x: 2 }, { x: 3 }].reduce(function(\r\n    accumulator,\r\n    currentValue\r\n  ) {\r\n    return accumulator + currentValue.x;\r\n  },\r\n  initialValue);\r\n\r\n  console.log(sum); // logs 6\r\n  const rows = () =>\r\n    course.parts.map(el => (\r\n      <p key={el.id}>\r\n        {el.name} {el.exercises}\r\n      </p>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      <h1>{course.name}</h1>\r\n      {rows()}\r\n    </div>\r\n  );\r\n};\r\n//   const rows = () => course.map(el => <p key={el.parts.id}>{el.parts.name}</p>);\r\n//   const result = { course };\r\n//   console.log(result);\r\n//   return { result };\r\n//   return (\r\n//     <>\r\n//       {course.map(el => (\r\n//         <p key={el.parts.id}>{el.parts.name}</p>\r\n//       ))}\r\n//     </>\r\n//   );\r\n\r\nexport default Course;\r\n"]},"metadata":{},"sourceType":"module"}