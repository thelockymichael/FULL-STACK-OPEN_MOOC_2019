{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mental Mickey\\\\Documents\\\\GitHub\\\\FULL-STACK-OPEN_MOOC_2019\\\\osa2\\\\part2-notes-part2-1\\\\src\\\\components\\\\Course.js\";\nimport React from \"react\";\nimport { notStrictEqual } from \"assert\";\n\nconst Course = props => {\n  const course = props.course;\n\n  const rows = () => {\n    course.map(note => React.createElement(\"li\", {\n      key: course.parts.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, course.parts.name));\n  }; //   const rows = () => course.map(el => <p key={el.parts.id}>{el.parts.name}</p>);\n  //   const result = { course };\n  //   console.log(result);\n  //   return { result };\n  //   return (\n  //     <>\n  //       {course.map(el => (\n  //         <p key={el.parts.id}>{el.parts.name}</p>\n  //       ))}\n  //     </>\n  //   );\n\n};\n\nexport default Course;","map":{"version":3,"sources":["C:\\Users\\Mental Mickey\\Documents\\GitHub\\FULL-STACK-OPEN_MOOC_2019\\osa2\\part2-notes-part2-1\\src\\components\\Course.js"],"names":["React","notStrictEqual","Course","props","course","rows","map","note","parts","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,QAA/B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,QACdC,MADc,GACHD,KADG,CACdC,MADc;;AAGtB,QAAMC,IAAI,GAAG,MAAM;AACjBD,IAAAA,MAAM,CAACE,GAAP,CAAWC,IAAI,IAAI;AAAI,MAAA,GAAG,EAAEH,MAAM,CAACI,KAAP,CAAaC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BL,MAAM,CAACI,KAAP,CAAaE,IAAxC,CAAnB;AACD,GAFD,CAHsB,CAMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CAjBD;;AAmBA,eAAeR,MAAf","sourcesContent":["import React from \"react\";\r\nimport { notStrictEqual } from \"assert\";\r\n\r\nconst Course = props => {\r\n  const { course } = props;\r\n\r\n  const rows = () => {\r\n    course.map(note => <li key={course.parts.id}>{course.parts.name}</li>);\r\n  };\r\n  //   const rows = () => course.map(el => <p key={el.parts.id}>{el.parts.name}</p>);\r\n  //   const result = { course };\r\n  //   console.log(result);\r\n  //   return { result };\r\n  //   return (\r\n  //     <>\r\n  //       {course.map(el => (\r\n  //         <p key={el.parts.id}>{el.parts.name}</p>\r\n  //       ))}\r\n  //     </>\r\n  //   );\r\n};\r\n\r\nexport default Course;\r\n"]},"metadata":{},"sourceType":"module"}